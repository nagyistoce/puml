#############################################################################
# Makefile for building: pUMLTest2
# Generated by qmake (2.01a) (Qt 4.6.2) on: Tue Feb 7 12:18:00 2012
# Project:  pUML.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile pUML.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		canvas.cpp \
		nodes.cpp \
		nodefactory.cpp \
		UMLnodes.cpp \
		document.cpp moc_mainwindow.cpp \
		moc_canvas.cpp \
		moc_UMLnodes.cpp \
		moc_document.cpp \
		qrc_icons.cpp
OBJECTS       = main.o \
		mainwindow.o \
		canvas.o \
		nodes.o \
		nodefactory.o \
		UMLnodes.o \
		document.o \
		moc_mainwindow.o \
		moc_canvas.o \
		moc_UMLnodes.o \
		moc_document.o \
		qrc_icons.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		pUML.pro
QMAKE_TARGET  = pUMLTest2
DESTDIR       = 
TARGET        = pUMLTest2

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: pUML.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile pUML.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile pUML.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/pUMLTest21.0.0 || $(MKDIR) .tmp/pUMLTest21.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/pUMLTest21.0.0/ && $(COPY_FILE) --parents mainwindow.h canvas.h nodes.h nodefactory.h UMLnodes.h document.h .tmp/pUMLTest21.0.0/ && $(COPY_FILE) --parents icons.qrc .tmp/pUMLTest21.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp canvas.cpp nodes.cpp nodefactory.cpp UMLnodes.cpp document.cpp .tmp/pUMLTest21.0.0/ && (cd `dirname .tmp/pUMLTest21.0.0` && $(TAR) pUMLTest21.0.0.tar pUMLTest21.0.0 && $(COMPRESS) pUMLTest21.0.0.tar) && $(MOVE) `dirname .tmp/pUMLTest21.0.0`/pUMLTest21.0.0.tar.gz . && $(DEL_FILE) -r .tmp/pUMLTest21.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_canvas.cpp moc_UMLnodes.cpp moc_document.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_canvas.cpp moc_UMLnodes.cpp moc_document.cpp
moc_mainwindow.cpp: UMLnodes.h \
		nodes.h \
		canvas.h \
		nodefactory.h \
		document.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_canvas.cpp: nodes.h \
		canvas.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) canvas.h -o moc_canvas.cpp

moc_UMLnodes.cpp: nodes.h \
		UMLnodes.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) UMLnodes.h -o moc_UMLnodes.cpp

moc_document.cpp: nodes.h \
		nodefactory.h \
		document.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) document.h -o moc_document.cpp

compiler_rcc_make_all: qrc_icons.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_icons.cpp
qrc_icons.cpp: icons.qrc \
		Images/square.png \
		Images/oval.png \
		Images/diamond.png \
		Images/select.png \
		Images/rectangle.png \
		Images/stickman.png \
		Images/circle.png
	/usr/bin/rcc -name icons icons.qrc -o qrc_icons.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		UMLnodes.h \
		nodes.h \
		canvas.h \
		nodefactory.h \
		document.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		UMLnodes.h \
		nodes.h \
		canvas.h \
		nodefactory.h \
		document.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

canvas.o: canvas.cpp canvas.h \
		nodes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o canvas.o canvas.cpp

nodes.o: nodes.cpp nodes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nodes.o nodes.cpp

nodefactory.o: nodefactory.cpp nodefactory.h \
		nodes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nodefactory.o nodefactory.cpp

UMLnodes.o: UMLnodes.cpp nodes.h \
		UMLnodes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UMLnodes.o UMLnodes.cpp

document.o: document.cpp document.h \
		nodes.h \
		nodefactory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o document.o document.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_canvas.o: moc_canvas.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_canvas.o moc_canvas.cpp

moc_UMLnodes.o: moc_UMLnodes.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_UMLnodes.o moc_UMLnodes.cpp

moc_document.o: moc_document.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_document.o moc_document.cpp

qrc_icons.o: qrc_icons.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_icons.o qrc_icons.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

